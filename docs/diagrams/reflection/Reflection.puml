@startuml

skinparam NoteFontSize 20

skinparam class {
    FontSize 20
    AttributeFontSize 20
    MethodFontSize 20
}

skinparam classAttributeIconSize 0
hide circle

package parser {
    class ReflectionCommandParser {
    }

    class Parser {
    }
}

package command {
    interface "<<interface>>\nCommand" as Command {
            + execute(): void
            + isExit(): boolean
    }


    class ReflectionCommand implements Command {
    }
    note top of ReflectionCommand: Could represent: \n1.GetReflectionQuestionsCommand \n2.ListFavouriteReflectionsCommand \n3.ReflectionHelpCommand \n4.SaveToFavouritesCommand \n5.UnsaveFromFavouritesCommand
}
package reflection {
    abstract class "{abstract}\nReflectionList" as ReflectionList {
        - reflectionList: ArrayList<ReflectionQuestion>

        + ReflectionList()
        + addReflectionQuestion(reflectionQuestion: ReflectionQuestion): void
        + removeReflectionQuestion(reflectionQuestion: ReflectionQuestion): void
        + getSize(): int
        + getReflectionList(): ArrayList<ReflectionQuestion>
    }

    class FavoriteReflectionsList {
        + FavoriteReflectionsList()
        + get(favouritesId: int): ReflectionQuestion
    }

    class ReflectionQuestionBank {
        - setUpReflectionBank(): void
        + ReflectionQuestionBank()
        + getFiveRandomQuestions(): ArrayList<ReflectionQuestion>
    }

    class ReflectionQuestion {
        - question: String
        + ReflectionQuestion(question: String)
        + toString(): String
    }

    class ReflectionManager {

        + ReflectionManager()
        + printFiveRandomQuestions(): void
        + saveReflectionQuestion(reflectionId: int): void
        + unsaveReflectionQuestion(reflectionId: int): void
        + printFavourites(): void
        + printHelpMenu(): void
    }
}

class Storage {
}

class Ui {
}

ReflectionList *-- "*" ReflectionQuestion : contains
FavoriteReflectionsList --|> ReflectionList
ReflectionQuestionBank --|> ReflectionList
ReflectionQuestionBank *-- "41" ReflectionQuestion : contains >
FavoriteReflectionsList *-- "*" ReflectionQuestion : contains >

ReflectionManager ..> Storage : uses >
ReflectionManager ..> Ui : uses >
ReflectionManager *-- "1" FavoriteReflectionsList : contains >
ReflectionManager *-- "1" ReflectionQuestionBank : contains >

Parser ..> ReflectionCommandParser : creates >
ReflectionCommandParser .DOWN.> ReflectionCommand : creates >

ReflectionCommand --> ReflectionManager: uses

@enduml
